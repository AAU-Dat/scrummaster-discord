const Discord = require("discord.js");
const core = require("@actions/core");

const ICON_URL =
  "https://media-exp1.licdn.com/dms/image/C510BAQHgfIxjqWSSsQ/company-logo_200_200/0/1519855922416?e=2159024400&v=beta&t=_L2XLMCXeEzSX_c8oBMM_uuEK1kgfno7ViFJXD5BP6U";

try {
  const team = JSON.parse(core.getInput("team"));
  const scrumMasters = determineScrumMasters(team);
  const embed = buildEmbed(scrumMasters);

  postScrumMastersDiscord(embed);
} catch (error) {
  core.setFailed(error.message);
}

function determineScrumMasters(team) {
  if (team.length < 2) throw new Error("You need a larger team");

  const number = process.env.GITHUB_RUN_NUMBER;
  const variance = process.env.GITHUB_RUN_ID;

  const scrumMasterOne = team.splice(number % team.length, 1);
  const scrumMasterTwo = team.splice((number + variance) % team.length, 1);

  if (team.length < 4) return scrumMasterOne;

  return scrumMasterOne.concat(scrumMasterTwo);
}

function buildEmbed(scrumMasters) {
  let result = new Discord.MessageEmbed()
    .setTitle("New Scrum Master(s)")
    .setColor("#211a52")
    .setAuthor({
      name: "AAU-Dat",
      iconURL: ICON_URL,
      url: "http://github/AAU-Dat",
    })
    .setFooter("Generated by a Github Action")
    .addField({
      name: "Scrum master",
      value: scrumMasters[0],
      inline: true,
    });
  if (scrumMasters.length > 1) {
    result.addField({
      name: "Second Scrum Master",
      value: scrumMasters[1],
      inline: true,
    });
  }
  return result;
}

function postScrumMastersDiscord(embed) {
  const webhook = process.env.DISCORD_WEBHOOK;
  const { id, token } = breakWebhook(webhook);

  const webhookClient = new Discord.WebhookClient(id, token);

  webhookClient
    .send("Webhook test", {
      username: "Github Action",
      avatarURL: ICON_URL,
      embeds: [embed],
    })
    .destroy()
    .catch(console.error);
}

function breakWebhook(webhook) {
  const array = webhook.split("/");
  const length = array.length;
  if (length < 3) throw new Error("Webhook probably misrepresented");
  if (array[array.length - 1] == "github") {
    return { id: array[length - 3], token: array[length - 2] };
  }
  return { id: array[length - 2], token: array[length - 1] };
}
